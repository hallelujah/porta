- account_plans_size = @account_plans.size
- create_account_path = current_account.master? ? new_provider_admin_account_path : new_admin_buyers_account_path

div class="pf-c-card"
  div class="pf-c-toolbar"
    div class="pf-c-toolbar__content"
      div class="pf-c-toolbar__content-section pf-m-nowrap"
        div class="pf-c-toolbar__group pf-m-toggle-group pf-m-show-on-md"
          div class="pf-c-toolbar__toggle"
            button class="pf-c-button pf-m-plain" type="button" aria-label="Show filters" aria-expanded="false" aria-controls="-expandable-content"
              i class="fas fa-filter" aria-hidden="true"

          = render partial: 'shared/toolbar_item_bulk_select'

          = search_form(@search, html: { class: 'pf-c-toolbar__group' }) do |s|
            div class="pf-c-toolbar__item pf-m-search-filter"
              div class="pf-c-text-input-group"
                div class="pf-c-text-input-group__main pf-m-icon"
                  span class="pf-c-text-input-group__text"
                    span class="pf-c-text-input-group__icon"
                      i class="fas fa-fw fa-search"
                    = s.text_field :query, size: 20, class: 'pf-c-text-input-group__text-input', placeholder: 'Filter'
              button class="pf-c-button pf-m-control" type="submit" aria-label="Search"
                i class="fas fa-arrow-right" aria-hidden="true"

            div class="pf-c-toolbar__group pf-m-filter-group"
              = s.toolbar_select :plan_id, @account_plans, :id, :name, title: 'Plan'
              = s.toolbar_select :state, account_states_for_select, :id, :name, title: 'State'

          div class="pf-c-toolbar__content-section pf-m-button-group"
            - if can?(:create, Account)
              div class="pf-c-toolbar__item"
                = link_to 'Create account', create_account_path, class: 'pf-c-button pf-m-primary'
            - if params.key?(:search)
              div class="pf-c-toolbar__item"
                = link_to 'Clear all filters', url_for, class: 'pf-c-button pf-m-link', type: 'button'

  table class="pf-c-table pf-m-grid-lg" role="grid" id="buyer_accounts" aria-label="Accounts table"
    thead
      tr role="row"
        td role="columnheader" scope="col"
        = th_sortable('org_name', 'Group/Org.')
        th role="columnheader" scope="col"
          | Admin
        = th_sortable('created_at', 'Signup Date')
        - if account_plans_size > 1
          = th_sortable('plans.name', 'Plan')
        - if can?(:see, :multiple_applications)
          th role="columnheader" scope="col"
            | Apps
        = th_sortable('state', 'State')
        th role="columnheader" scope="col" class="actions pf-m-fit-content"

    tbody role="rowgroup"
      - accounts.each do |account|
        tr role="row" id=dom_id(account)
          td class="pf-c-table__check select" role="cell" id=account.id
            label
              = bulk_select_one account
          td role="cell" data-label="Group/Org."
            = link_to account.org_name, admin_buyers_account_path(account)
          td role="cell" data-label="Admin"
            = account.admin_user_display_name
          td role="cell" data-label="Signup Date"
            = account.created_at.strftime("%e %b, %Y")
          - if account_plans_size > 1
            td role="cell" data-label="Plan" class="plan"
              = h account.bought_account_plan.try(:name)
          - if can?(:see, :multiple_applications)
            td role="cell" data-label="Apps"
              = link_to current_user.accessible_cinstances.bought_by(account).count, admin_buyers_account_applications_path(account)
          td role="cell" data-label="State" class="state"
            = account_states_info(account)
          td role="cell" class="pf-c-table__action actions operations"
            ul.Actions
              - if account.admin_user.try!(:pending?)
                li.Actions-item
                  = link_to_activate_buyer_user(account.admins.first)
              - elsif account.pending?
                li.Actions-item
                  = action_link_to 'approve', approve_admin_buyers_account_path(account),
                                              method: :post
              - elsif can? :impersonate, account
                li.Actions-item
                  = link_to "Act as", admin_buyers_account_impersonation_path(account),
                                      method: :post,
                                      target: '_blank',
                                      title: 'Impersonate impersonation_admin user on this provider side',
                                      class: 'action bolt'

      - if accounts.empty?
        = render partial: 'empty_state', locals: { colspan: can?(:see, :multiple_applications) ? 9 : 8,
                                                   body: t('buyers.accounts.empty_search.body') }

= will_paginate accounts
= link_to_export_widget_for('Accounts')
